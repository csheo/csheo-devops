plugins {
    id 'groovy'
    id 'groovy-gradle-plugin'
    id "com.google.cloud.tools.jib" version "3.4.3"

}

group = 'com.aaa'
version = '1.0'

def registry = System.getenv("CONTAINER_REGISTRY_URI")?System.getenv("CONTAINER_REGISTRY_URI"):"semas-dev-container-registry.ncr.gov-ntruss.com"
def containerName = "sample"
def tag = System.getenv("TAG")?System.getenv("TAG"):"local"
def profile = System.getenv("PROFILE")?System.getenv("PROFILE"):"local"

registry = "semas-dev-container-registry.ncr.gov-ntruss.com"


java {
    sourceCompatibility = '21'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
    gradlePluginPortal() // `nu.studer.jooq:nu.studer.jooq.gradle.plugin` is hosted here
}

def properties = new Properties()
file(new File(rootProject.projectDir.parentFile, 'gradle.properties')).withInputStream { stream ->
    properties.load(stream)
}

dependencies {
    implementation localGroovy()
    implementation "org.springframework.boot:spring-boot-gradle-plugin:${properties['spring.boot.version']}"
    implementation "io.spring.dependency-management:io.spring.dependency-management.gradle.plugin:${properties['spring.dependency-management.version']}"
    implementation "nu.studer.jooq:nu.studer.jooq.gradle.plugin:${properties['nu.studer.jooq.version']}"
    implementation "org.sonarqube:org.sonarqube.gradle.plugin:${properties['sonarqube.version']}"
    implementation "org.asciidoctor:asciidoctor-gradle-jvm:${properties['asciidoctor.version']}"
    implementation "com.epages:restdocs-api-spec-gradle-plugin:${properties['epages.restdocs.api.spec.version']}"


    implementation(platform("io.opentelemetry:opentelemetry-bom:1.41.0"))
    implementation("io.opentelemetry:opentelemetry-api")

}




jib {
    containerizingMode = "packaged"
    dockerClient {
        executable = "/usr/local/bin/docker"
    }
    from {
        image = "bellsoft/liberica-runtime-container:jre-21-slim-musl"

        //image = "semas-dev-container-registry.ncr.gov-ntruss.com/openjre17:081402"

        auth {
            username = System.getenv("CONTAINER_REGISTRY_ACCESS")?System.getenv("CONTAINER_REGISTRY_ACCESS"):""
            password = System.getenv("CONTAINER_REGISTRY_SECRET")?System.getenv("CONTAINER_REGISTRY_SECRET"):""
        }
        registry = "semas-dev-container-registry.ncr.gov-ntruss.com"
    }
    to {
        image = "${registry}/${containerName}:${tag}"
        auth {
            username = System.getenv("CONTAINER_REGISTRY_ACCESS")?System.getenv("CONTAINER_REGISTRY_ACCESS"):""
            password = System.getenv("CONTAINER_REGISTRY_SECRET")?System.getenv("CONTAINER_REGISTRY_SECRET"):""
        }
        tags = ["latest"]
        allowInsecureRegistries = true
    }
    container {
        format = "OCI"
        mainClass = "com.entasdfs.boot.TemplateApplication"
        jvmFlags = [
                //"-Dspring.profiles.active=${profile}",
                "-Dfile.encoding=UTF-8",
        ]
        environment = [
                //"SPRING_PROFILES_ACTIVE": profile,
                "SERVER_PORT": "8080",
                "MANAGEMENT_SERVER_PORT": "8081",
                "JAVA_TOOL_OPTIONS": "-XX:+UseShenandoahGC",
                "LANG:": "ko_KR.UTF-8",
                "LANGUAGE:": "ko_KR;ko;en_US;en",
                "TZ": "Asia/Seoul"
        ]
        ports = ["8080"]
        creationTime = "USE_CURRENT_TIMESTAMP"
    }
}
