buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.yaml:snakeyaml:2.2'
    }
}

import org.yaml.snakeyaml.Yaml

private static String getFileName() {
    String env = System.getenv('SPRING_PROFILES_ACTIVE')
    if (env == null || env == "tester") {
        env = "local"
    }
    String fileName = "application-jooq.yaml"
    if (env == "dev" || env == "local") {
        fileName = "application-jooq-" + env + ".yaml"
    }
    return fileName
}

ext {
    jooqProperty = new Yaml().loadAll(new File("$projectDir/src/main/resources/" + getFileName()).newInputStream()).first()
}

jooq {
    version = "${project['jooq.version']}"
    configurations {
        dsl {
            generationTool {
                logging = 'ERROR'
                jdbc {
                    driver = 'com.mysql.cj.jdbc.Driver'
                    url = jooqProperty.jooq.generator.datasource.url
                    user = jooqProperty.jooq.generator.datasource.username
                    password = jooqProperty.jooq.generator.datasource.password
                    // TODO: 인프라 구성 후 환경변수로 변경 필요
                    //user = "$System.env.DB_RO_USERNAME"
                    //password = "$System.env.DB_RO_PASSWORD"
                }
                generator {
                    name = 'com.entasdfs.common.jooqcustom.JooqCustomGenerator'
                    database {
                        name = 'org.jooq.meta.mysql.MySQLDatabase'

                        schemata {
                            schema {
                                inputSchema = jooqProperty.jooq.generator.datasource.schema
                            }
                        }

                        excludes = ".*flyway.*"
                        unsignedTypes = true
                        forcedTypes {
                            forcedType {
                                userType = 'com.entasdfs.common.commoncode.core.CommonCode'
                                converter = 'com.entasdfs.common.jooq.commoncode.converter.CommonCodeJooqConverter'
                                includeExpression = '.*_ckey$'
                                // TODO: suffix 정의 필요
                            }

                            forcedType {
                                userType = 'com.entasdfs.common.common.money.domain.data.CurrencyType'
                                converter = 'com.entasdfs.common.jooq.money.converter.StringToCurrencyTypeJooqConverter'
                                includeExpression = '.*currency_cd$'
                            }

                            forcedType {
                                userType = 'javax.money.NumberValue'
                                converter = 'com.entasdfs.common.jooq.money.converter.BigDecimalToNumberValueJooqConverter'
                                includeExpression = 'tb_exchange_rate.exchange_rate$'
                            }

                            forcedType {
                                userType = 'java.lang.Long'
                                includeTypes = 'bigint unsigned'
                            }
                            forcedType {
                                userType = 'java.lang.Long'
                                includeTypes = 'int unsigned'
                            }
                            forcedType {
                                userType = 'java.lang.Integer'
                                includeTypes = 'mediumint unsigned'
                            }
                            forcedType {
                                userType = 'java.lang.Integer'
                                includeTypes = 'smallint unsigned'
                            }
                            forcedType {
                                userType = 'java.lang.Integer'
                                includeTypes = 'tinyint unsigned'
                            }
                            forcedType {
                                userType = 'java.lang.Integer'
                                includeTypes = 'smallint'
                            }
                            forcedType {
                                userType = 'java.lang.Integer'
                                includeTypes = 'tinyint'
                            }
                        }
                    }

                    generate {
                        daos = true
                        records = true
                        fluentSetters = true
                        javaTimeTypes = true
                        deprecated = false
                    }

                    target {
                        directory = jooqProperty.jooq.generator.directory
                        packageName = 'com.entasdfs.common.jooq.generated'
                    }

                    strategy.name = 'com.entasdfs.common.jooqcustom.JooqGeneratorStrategy'
                }
            }
        }
    }
}

generateDslJooq {
    dependsOn project(':common:flyway').tasks.named('flywayDomainMigrate')
}

apply from: 'gradle-scripts/commoncode.gradle'
apply from: 'gradle-scripts/multilingual.gradle'
